# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Notification {
  id: Int!
  date: DateTime!
  description: String!
  lu: Boolean!
  collaborateur: Collaborateur!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Competence {
  id: Int!
  nom: String!
  cvs: [Cv!]!
}

type Cv {
  id: Int!
  cmptLinkedin: String
  statutCV: StatutCV!
  activiteAssociatives: String
  certificats: String
  langues: [String!]!
  experiences: String
  formations: String
  projets: String
  interets: String
  personne: Personne!
  competences: [Competence!]
  CvPersonne: Cv!
}

enum StatutCV {
  RECU
  ACCEPTE
  REFUSE
}

type Entretien {
  id: Int!
  date: DateTime!
  duree: String!
  statut: StatutEntretien!
  raisonAnnulation: String
  candidature: Candidature!
}

enum StatutEntretien {
  PLANIFIE
  REPORTE
  ANNULE
  EFFECTUE
}

type Candidature {
  id: Int!
  date: DateTime!
  personne: Personne!
  entretiens: [Entretien!]!
}

type Personne {
  id: Int!
  nom: String!
  etatCivil: String
  dateNaiss: DateTime
  adresse: String
  tel: String
  email: String!
  avatar: String
  recommande: Boolean!
  cv: Cv!
  cvId: Int!
  candidatures: [Candidature!]
}

type Collaborateur {
  id: Int!
  nom: String!
  etatCivil: String
  dateNaiss: DateTime
  adresse: String
  tel: String
  email: String!
  avatar: String
  recommande: Boolean!
  cv: Cv!
  cvId: Int!
  candidatures: [Candidature!]
  cin: Int!
  telPro: Int!
  emailPro: String!
  poste: String!
  salaire: Int!
  dateEmb: DateTime
  nomUtilisateur: String!
  role: UserRole!
  permission: UserPermission!
  evaluation: Int
  equipe: Equipe
  notifications: [Notification!]
}

enum UserRole {
  RH
  RP
  TEAMLEADER
  COLLABORATEUR
}

enum UserPermission {
  SUPER
  ADMINISTRATEUR
  UTILISATEUR
}

type Equipe {
  id: Int!
  nom: String!
  collaborateurs: [Collaborateur!]!
  pole: Pole!
  teamleader: Collaborateur!
}

type Pole {
  id: Int!
  nom: String!
  equipes: [Equipe!]
  rp: Collaborateur!
}

type Connexion {
  access_token: String!
  user: Collaborateur!
}

type Query {
  createIndexCol: Boolean!
  createDataCol: Boolean!
  searchCol(mot: String!): [Collaborateur!]!
  findCols(equipe: Int, pole: Int): [Collaborateur!]!
  findCol(idCol: Int!): Collaborateur
  findFilterCols(selectedComp: [String!], selectedPoste: [String!], selectedEquipes: [Int!], selectedPoles: [Int!]): [Collaborateur!]!
  findFilteredCols(filterInput: FilterInput!): [Collaborateur!]!
  findFilterUsers(selectedRoles: [UserRole!]): [Collaborateur!]!
  findPoles: [Pole!]!
  findPole(idPole: Int!): Pole!
  findPoleRp(rpId: Int!): Pole!
  findEquipes: [Equipe!]!
  findEquipe(idEquipe: Int!): Equipe!
  findEquipesPole(idPoles: [Int!]!): [Equipe!]!
  findPostes(equipe: Int, pole: Int): [Collaborateur!]!
  findRoles: [Collaborateur!]!
  findPermissions: [Collaborateur!]!
  findnotifs: [Notification!]!
  findnotif(idNotif: Int!): Notification!
  findEntretiens: [Entretien!]!
  findEntretien(idEnt: Int!): Entretien!
  findCvs: [Cv!]!
  findCv(idCv: Int!): Cv!
  findCvByMail(email: String!): Cv!
  findCompetences: [Cv!]!
  getCvsMail: Boolean!
  extractOneCv(file: String!): Boolean!
  addCvs: Boolean!
  findAllCompetences: [Competence!]!
  findCompetence(idComp: Int!): Competence!
  createIndex: Boolean!
  createData: Boolean!
  search(mot: String!): [Personne!]!
  findPersonnes: [Personne!]!
  findPersonne(idPersonne: Int!): Personne!
  findPersonnesId(ids2: [Int!], ids1: [Int!]): [Personne!]!
  findFilterCands(selectedComp: [String!]): [Personne!]!
  findCandidatures: [Candidature!]!
  findCandidature(idCandidature: Int!): Candidature!
  login(motDePasse: String!, nomUtilisateur: String!): Connexion!
}

input FilterInput {
  champs: String!
  valeurs: [Int!]!
}

type Mutation {
  createCol(createColInput: CreateColInput!): Collaborateur!
  updateCol(updateColInput: UpdateColInput!, idCol: Int!): Collaborateur!
  removeCol(idCol: Int!): Boolean!
  createPole(createPoleInput: CreatePoleInput!): Pole!
  createNotif(createNotifInput: CreateNotificationInput!): Notification!
  createCv(createCvInput: CreateCvInput!): Cv!
  updateCv(updateCvInput: UpdateCvInput!, idCv: Int!): Cv!
  removeCv(idCv: Int!): Boolean!
  uploadFile(file: Upload!): Boolean!
  createCompetence(createCompetenceInput: CreateCompetenceInput!): Competence!
  updateCompetence(updateCompetenceInput: UpdateCompetenceInput!, idCompetence: Int!): Competence!
  updateRecommande(value: Boolean!, idPersonne: Int!): Boolean!
  createPersonne(createPersonneInput: CreatePersonneInput!): Personne!
  updatePersonne(updatePersonneInput: UpdatePersonneInput!, idPersonne: Int!): Personne!
  removePersonne(idPersonne: Int!): Boolean!
  removeCandidat(idCand: Int!): Boolean!
  restorePersonne(idPersonne: Int!): Personne!
  addUserLdap(motDePasse: String!, nomUtilisateur: String!): Boolean!
}

input CreateColInput {
  nom: String!
  etatCivil: String
  dateNaiss: DateTime
  adresse: String
  tel: String
  email: String!
  avatar: String
  recommande: Boolean
  cvId: Int!
  cin: Int!
  telPro: Int
  emailPro: String!
  poste: String!
  salaire: Int!
  dateEmb: DateTime!
  nomUtilisateur: String!
  role: UserRole!
  permission: UserPermission!
  evaluation: Int
  equipeId: Int
}

input UpdateColInput {
  nom: String
  etatCivil: String
  dateNaiss: DateTime
  adresse: String
  tel: String
  email: String
  avatar: String
  recommande: Boolean
  cvId: Int
  cv: UpdateCvInput
  cin: Int
  telPro: Int
  emailPro: String
  poste: String
  salaire: Int
  dateEmb: DateTime
  nomUtilisateur: String
  role: UserRole
  permission: UserPermission
  evaluation: Int
  equipe: UpdateEquipeInput
}

input UpdateCvInput {
  cmptLinkedin: String
  statutCV: String
  activiteAssociatives: String
  certificats: String
  experiences: String
  formations: String
  projets: String
  interets: String
  langues: [String!]
  competences: [CreateCompetenceInput!]
}

input CreateCompetenceInput {
  nom: String!
}

input UpdateEquipeInput {
  nom: String
  pole: UpdatePoleInput
}

input UpdatePoleInput {
  nom: String
}

input CreatePoleInput {
  nom: String!
}

input CreateNotificationInput {
  date: DateTime!
  description: String!
  lu: Boolean = false
}

input CreateCvInput {
  cmptLinkedin: String
  statutCV: String!
  activiteAssociatives: String
  certificats: String
  experiences: String
  formations: String
  projets: String
  interets: String
  langues: [String!]
  competences: [CreateCompetenceInput!]
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UpdateCompetenceInput {
  nom: String
}

input CreatePersonneInput {
  nom: String!
  etatCivil: String
  dateNaiss: DateTime
  adresse: String
  tel: String
  email: String!
  avatar: String
  recommande: Boolean
  cvId: Int!
}

input UpdatePersonneInput {
  nom: String
  etatCivil: String
  dateNaiss: DateTime
  adresse: String
  tel: String
  email: String
  avatar: String
  recommande: Boolean
  cvId: Int
  cv: UpdateCvInput
}
